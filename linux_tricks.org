#+TITLE: Linux tricks for everyday use

* Git 操作技巧总结

** git查看git仓库状况以及移除修改仓库内文件的方法
git status 查看git仓库和本地仓库的文件状态
git checkout -- <file> 移除本地仓库里没有add的修改 
git checkout -- . 为移除所有本地仓库里没有add的修改
git clean -df 移除本地仓库里没有add的所有新增删除文件
git rm --cached <file> untrack一个add在暂存区的文件
git rm -r --cached <file> untrack一个add在暂存区的文件夹
git tag -a v1.4 为分支打上相应的打标签
git show v1.4 查看标签里的详细信息（包括commit信息等等）
git tag 显示所有的标签版本号

** git查看提交历史与git版本回退
git reset --hard commit_id 回退到相应的提交版本
git log可以查看提交历史，以便确定要回退到哪个版本。
git reflog查看命令历史，以便确定要回到未来的哪个版本。

** git处理工作区的代码改动与减少merge节点的方法
git add -u（常用） 将已经在版本库里的文件加到缓存区
git tag 为关键commit加tag
git stash（常用） 当在不正确的分支修改以后，stash到缓存区，类似于add，然后在checkout到正确的分支里载git pop
git blame 查看每一个文件哪一行有改变
tig git的命令行交互程序
tmux 多窗口系统（远程也可以使用）
合理使用git rabase，减少无意义的merge节点

** git新建/查看/切换/删除/覆盖分支
git checkout -b dev 新建并切换到本地dev分支
git branch -d dev  # 删除本地dev分支
git pull origin dev 本地分支与远程分支相关联
git branch 查看分支, 这时会看到master和dev，而且master上会有一个星号

+ 在本地新建分支并推送到远程流程
  1. git checkout -b test 
  2. git push origin test 这样远程仓库中也就创建了一个test分支
+ 在本地checkout到本地不存在的远程分支
  1. git checkout -b test origin/test

git checkout dev  # 切换到dev远程分支, 注意：在分支切换之前最好先commit全部的改变，除非你真的知道自己在做什么

+ 强制覆盖分支流程：
  1. git checkout master 将当前分支切换到主分支
  2. git reset -hard test 将主分支重置为test分支
  3. git push origin master -force 将重置后的master分支强制推送到远程仓库
     
** git查看/增加与克隆远程仓库
git remote -v 查看已有的远程仓库
git remote add origin https://github.com/MachineLearner1992/notes.git 添加一个origin的远程仓库
git clone https://github.com/MachineLearner1992/notes.git 从http上克隆一个代码仓库
git clone --recursive https://github.com/MachineLearner1992/notes.git 从http上克隆一个代码仓库, 代码仓库里包含代码仓库，递归克隆


* vs code tricks

** modified user settings
add the following parts in the root section of settings.json(in the system path)
+ settings.json system path
  + for Mac: $HOME/Library/Application Support/Code/User/settings.json
  + for linux: $HOME/.config/Code/User/settings.json

"editor.fontSize": 16,
"editor.wordWrap": "on",
"terminal.integrated.fontSize": 14,
"terminal.integrated.fontWeight": "bold",
"debug.console.fontSize": 15,
"editor.fontLigatures": true,
"workbench.colorTheme": "Solarized Dark",
"editor.fontWeight": "bold",
"python.dataScience.sendSelectionToInteractiveWindow": true,
"python.linting.enabled": false

** modified workspace user settings
add the following parts in the root section of settings.json(in the workspace .vscode file, create if not exists)

"editor.wordWrap": "off", 
"python.pythonPath": "/Users/didi/anaconda3/envs/anaconda2/bin/python",
"python.condaPath": "/Users/didi/anaconda3/envs/anaconda2/bin/conda",
"python.autoComplete.extraPaths": ["./gen-py"],
"python.linting.enabled": true,
"python.linting.pylintEnabled": true,
"python.linting.pylintPath": "/Users/didi/anaconda3/envs/anaconda2/bin/pylint" 

* linux 命令行技巧

** 进程与网络命令行技巧
+ 查看端口使用以及对应的进程号: lsof -i :端口号
+ 在服务器和本地机器之间复制文件，冒号后为远程用户的相对路径 scp global.cpp first@47.103.67.175:gitfile



* Linux(Ubuntu) install process

** 1. Create a user account(if needed)
+ 增加新用户：sudo useradd -d "/home/tt" -m tt #-m作用为没有目录默认创建目录
+ 设置密码：passwd username
+ 为用户指定shell usermod -s /bin/bash username
+ 为该用户指定用户主目录 usermod -d /home/username username
+ 为该用户增加sudo权限
  1. 执行 visudo 命令
  2. 在root ALL=(ALL:ALL) ALL 下面加入 username ALL=(ALL:ALL) ALL

** 2. Install zsh
1. sudo apt-get install zsh: install zsh
2. sudo apt-get install git: install git
3. git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
4. cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc: change the .zshrc as the template
5. chsh -s /bin/zsh: change the default shell
   
** 3. 安装搜狗拼音输入法方法
1. 先安装fcitx： sudo apt install fcitx
2. 再安装fcitx的必要插件：sudo apt install fcitx
3. 然后在设置里找到Region & language，在里面找到Manage Installed Languages，按照以下图片操作 
   [./pic/language-setting.png]
   [./pic/apply-setting.png]
5. 安装sogou拼音，下载deb包，sudo dpkg -i sogoupinyin_2.2.0.0108_amd64.deb
   
** 4. 安装JDK8
+ sudo add-apt-repository ppa:webupd8team/java 将java加入源
+ sudo apt-get update 更新源
+ sudo apt-get install oracle-java8-installer 安装java8安装器
  
* elasticsearch 技巧

** 安装配置elasticsearch
1. 下载elasticsearch的deb包，dpkg -i elasticsearch*.deb 安装elasticsearch
2. 到/etc/elasticsearch/elasticsearch.yml里配置, 进/etc/elasticsearch目录前要sudo -i进入root模式
   + 修改path.data与path.logs到指定路径
   + 在云端服务器配置时，将bootstrap.memory_lock设置为bootstrap.memory_lock: false让elasticsearch获得最大的内存权限
   + 在云端服务器配置时，将network.host设为本机地址
   + 在云端服务器配置时，将http.port设为9200
3. 每一次重启机器以后都要输入(如果需要高性能的时候)sysctl -w vm.max_map_count=262144临时修改jvm的默认最大线程数
4. 第一次安装的时候输入systemctl enable elasticsearch.service注册服务
5. 每一次重启机器以后都要输入systemctl start elasticsearch.service开启elasticsearch服务
6. 如果需要安装插件，sudo -i进入root模式，进入/usr/share/elasticsearch/bin文件，运行./elasticsearch-plugin install [puglin-name]
   
** 为elasticsearch配置密码
1. 修改/etc/elasticsearch/elasticsearch.yml配置文件，最后添加:
   + xpack.security.enabled: true
   + xpack.security.transport.ssl.enabled: true
   + xpack.security.transport.ssl.verification_mode: certificate
   + xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
   + xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
2. 重新启动elasticsearch
3. 进入/usr/share/elasticsearch/bin文件，运行./elasticsearch-setup-passwords interactive设置整个elasticsearch的密码
4. 为索引创建权限角色与用户
   1. 创建具有不同权利的角色，具体配置角色的方式详见elasticsearch_passwd.http文件，文件用vscode的restclient打开
   2. 创建属于不同角色的用户，具体创建用户的方式详见elasticsearch_passwd.http文件，文件用vscode的restclient打开 
   
** elasticsearch的索引建立与增删改查 
详细过程见elasticsearch.http文件

   
* Connecting to AliCloud

** ssh IP for Alicloud
public IP: 47.99.111.27

** ssh IP for peter Alicloud
public: IP: 47.103.67.175
